import { StoreParams } from '../filelink';
import { ClientOptions, Session } from '../client';
/**
 * @private
 */
export declare const PICKER_KEY = "__fs_picker_token";
/**
 * key for picker callback url (specifies which tab will be opened after opening picker)
 * @private
 */
export declare const CALLBACK_URL_KEY = "fs-tab";
/**
 * @private
 */
export declare class CloudClient {
    session: Session;
    cloudApiUrl: string;
    /**
     * Returns flag if token should be cached in local storage
     *
     * @private
     * @type {boolean}
     * @memberof CloudClient
     */
    private cache;
    /**
     * Token returned from api for accessing clouds
     *
     * @private
     * @type {string}
     * @memberof CloudClient
     */
    private _token;
    /**
     * Flag for in-app browser setup
     * (in-app browsers are not supporting new window so we need to save token to session cache)
     *
     * @private
     * @memberof CloudClient
     */
    private _isInAppBrowser;
    constructor(session: Session, options?: ClientOptions);
    token: string;
    prefetch(): Promise<any>;
    list(clouds: any, token?: any): Promise<any>;
    store(name: string, path: string, options?: StoreParams, customSource?: any, token?: any): Promise<any>;
    logout(name?: string): Promise<any>;
    metadata(url: string): Promise<any>;
    tokInit(type: string): Promise<any>;
    tokStart(type: string, key: string, sessionId: string): Promise<any>;
    tokStop(type: string, key: string, sessionId: string, archiveId: string): Promise<any>;
    private currentAppUrl;
}
